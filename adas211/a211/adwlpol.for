CX UNIX PORT - SCCS info: Module @(#)$Header: /home/adascvs/fortran/adas2xx/adas211/adwlpol.for,v 1.5 2007/05/16 10:16:49 allan Exp $ Date $Date: 2007/05/16 10:16:49 $
CX
       SUBROUTINE ADWLPOL(Z0,NLQS,NSHELL,NA,LA,EA,QDA,ALFAA,JSN,JEALFA,
     &ACC,XMAX,H,LAM,IREPT,IEXT,ANS,OPEN17)
       IMPLICIT REAL*8(A-H,O-Z)
C-----------------------------------------------------------------------
C  VERSION OF DWLPOL FOR USE BY ADASRRC.  IT AVOIDS ALFA SEARCH FOR FREE
C  WAVE FUNCTIONS BY USING SAME SCREENING PARAMETERS AS BOUND STATE
C  ************** H.P. SUMMERS, JET   30 JUNE 1992 *********************
C
C  PURPOSE: EVALUATES LAM-POLE RADIAL MATRIX ELEMENTS USING DISTORTED
C  WAVES
C
C  BOUND-BOUND, BOUND-FREE AND FREE-FREE CASES ARE HANDLED.  THE
C  DISTORTED WAVES ARE IN A JUCYS OR SLATER TYPE POTENTIAL.
C  ************** H.P. SUMMERS, JET  24 APRIL 1985 *********************
C  INPUT
C      Z0=NUCLEAR CHARGE (+VE)
C      NLQS(I)=N,L,IQ FOR EACH SCREENING SHELL I=1 TO NSHELL
C      NSHELL=NUMBER OF SCREENING SHELLS
C      NA(1),NA(2)=INITIAL AND FINAL STATE PRINCIPAL QUANTUM NUMBERS.
C                  SET TO ZERO FOR FREE STATES
C      LA(1),LA(2)=INITIAL AND FINAL STATE ORBITAL QUANTUM NUMBERS.
C      EA(1),EA(2)=ENERGIES(RYD) OF INITIAL AND FINAL STATES
C                  SET <0 FOR BOUND STATES, SET >0 FOR FREE STATES.
C      QDA(1),QDA(2)=QUANTUM DEFECTS FOR INITIAL AND FINAL STATES.
C                    EXTRAPOLATED QUANTUM DEFECT USED FOR FREE STATE
C      ALFAA(1,I),ALFAA(2,I)=SCREENING PARAMETERS FOR INITIAL AND FINAL
C                            STATES FOR EACH SHELL I=1 TO NSHELL.
C      JSN=-1 JUCYS POTENTIAL
C         =0  SLATER POTENTIAL
C      JEALFA=0 SEARCH FOR ENERGIES GIVEN POTENTIAL (NO EFFECT FOR
C                   FREE STATES)
C            =1 SEARCH FOR ALFAA PARAMETERS FOR POTENTIAL GIVEN ENERGIES
C                   AND QUANTUM DEFECTS.
C      ACC=SEARCH ACCURACY SETTING
C      XMAX=RANGE FOR NUMERICAL WAVE FUNCTION GENERATION AND STORAGE
C      H=STEP INTERVAL FOR NUMERICAL WAVE FUNCTION STORAGE
C      LAM=MULTIPOLE (FOR RADIAL INTEGRAL <X**LAM>)
C      IREPT=0 FULL WAVE FUNCTION DETERMINATION
C           =1 REPETITION WITH SAME WAVE FUNCTIONS AS IN PREVIOUS CASE
C           =2 USE SAME BOUND WAVE FUNCTIONS AS IN PREVIOUS CASE,
C              USE FREE WAVE FUNCTIONS IN SAME POTENTIAL AS IN PREVIOUS
C              BUT WITH POSSIBLY DIFFERENT ENERGIES.
C      IEXT=0 NORMAL OPERATION WITH INTERNALLY GENERATED WAVE FUNCTIONS
C          =1 USE EXTERNAL WAVE FUNCTIONS SUPPLIED IN FUNCTION
C             GEXT(X,N,L) WITH N AND L SPECIFYING ORBITAL.
C      OPEN17 = FLAG WHETHER UNIT 17 IS OPENED OR NOT
C  OUTPUT
C      ANS=RADIAL INTEGRAL (AT. UNITS)
C
C
C  UPDATE:  HP SUMMERS  16/06/95  ALTER DEFINIAITON OF NLQS AS
C                                 1000*N+100*L+IQ TO AVOID PROBLEM WHEN\
C                                 NUMBER OF EQUIVALENT ELECTRONS IS 10.
C UNIX-IDL PORT:
C
C AUTHOR:  WILLIAM OSBORN (TESSELLA SUPPORT SERVICES PLC)
C
C DATE:    4TH JULY 1996
C
C VERSION: 1.1                          DATE: 04-07-96
C MODIFIED: WILLIAM OSBORN
C               - FIRST VERSION.
C
C VERSION: 1.2                          DATE: 19-08-96
C MODIFIED: WILLIAM OSBORN
C               - COMMENTED-OUT DIAGNOSTIC OUTPUT.
C               - ADDED OPEN17 PARAMETER.
C
C VERSION: 1.3                          DATE: 23-08-96
C MODIFIED: WILLIAM OSBORN
C               - CORRECTED OUTPUT TO STREAM 17
C
C VERSION: 1.4                          DATE: 19-12-01
C MODIFIED: Martin O'Mullane
C               - Removed junk from > column 72.
C
C VERSION: 1.5                          DATE: 16-05-07
C MODIFIED: Allan Whiteford
C               - Modified comments as part of subroutine documentation
C                 procedure.
C-----------------------------------------------------------------------
       DIMENSION NLQS(10),NUMEL(10),NC(10),ALFA(10)
       DIMENSION ALFAA(2,10),NA(2),LA(2),EA(2),QDA(2)
       DIMENSION X0A(2),X1A(2),X2A(2)
       DIMENSION GI(1000),GJ(1000),ZL(1000),ZS(100)
       DIMENSION AMPI(20),AMPJ(20),AMP1(20),AMP2(20)
       LOGICAL OPEN17
       IF(IREPT.GE.1.OR.IEXT.EQ.1)GO TO 73
       Z1=Z0
       ZZ0=-Z0
       IF(NSHELL.LE.0)GO TO 15
       DO 10 I=1,NSHELL
C      J=NLQS(I)
C      J1=J/10
C      IQ=J-10*J1
       J=NLQS(I)
       J1=J/100
       IQ=J-100*J1
       Q=IQ
       Z1=Z1-Q
       N=J/1000
       NUMEL(I)=IQ
   10  NC(I)=N
   15  JALF1=1
       JALF2=NSHELL
C       WRITE(I4UNIT(-1),*)'NC(I)=',(NC(I),I=1,NSHELL)
C       WRITE(I4UNIT(-1),*)'NUMEL(I)=',(NUMEL(I),I=1,NSHELL)
       DO 50 I=1,2
       IF(NA(I).GT.0)GO TO 16
       IF(NSHELL.GT.0)GO TO 11
C      X1=6.28/DSQRT(EA(I))
C  PREVIOUS LINE ALTERED 20 AUG '85 TO BELOW DUE TO ZERO DIV. WHEN EA=0
       X1=15.0D0/Z1
       GO TO 40
   11  EN=NC(NSHELL)
C ** DIAGNOSTIC PRINT 20/06/95
C       WRITE(I4UNIT(-1),*)'IN ADWLPOL:',' Z0=', Z0,'Z1=',Z1,' ACC=',ACC,
C     & ' NSHELL=',NSHELL ,' EN=',EN
       X1=-0.5D0*EN*DLOG(Z1*ACC/(Z0-Z1))/Z1
       GO TO 40
   16  ZEF=Z0
       IF(NSHELL.LE.0)GO TO 12
       DO 29 IS=1,NSHELL
       ALFA(IS)=ALFAA(I,IS)
C      JS=NLQS(IS)
C      NS=JS/100
C      LS=JS/10-10*NS
C      IQS=JS-10*LS-100*NS
       JS=NLQS(IS)
       NS=JS/1000
       LS=JS/100-10*NS
       IQS=JS-100*LS-1000*NS
       QS=IQS
       IF(NA(I)-NS)29,26,25
   25  ZEF=ZEF-QS
       GO TO 29
   26  IF(LA(I)-LS)29,27,28
   27  ZEF=ZEF-0.5D0
   28  ZEF=ZEF-0.5D0*QS
   29  CONTINUE
   12  EN=NA(I)
       T=ZEF/EN
       IF(JEALFA.GT.0)GO TO 30
       QDA(I)=EN-Z1/T
   30  EE=-T*T
       EL=LA(I)
       ELL=EL*(EL+1.0D0)
       T=Z1*Z1+ELL*EE
       IF(T)32,32,33
   32  X1=-Z1/EE
       GO TO 34
   33  X1=(-Z1-DSQRT(T))/EE
   34  CONTINUE
       Z2=-ZEFF(JSN,-Z0,NSHELL,NC,NUMEL,ALFA,X1)
       T=Z2*Z2+ELL*EE
       IF(T)35,35,36
   35  X1=-Z2/EE
       GO TO 37
   36  X1=(-Z2-DSQRT(T))/EE
   37  CONTINUE
   40  CONTINUE
       N=NA(I)
       L=LA(I)
       E=EA(I)
       QD=QDA(I)
       IF(NSHELL.LE.0)GO TO 42
       DO 41 IS=1,NSHELL
C------------ CHANGED LINE ----------------------------------
C  41  ALFA(IS)=ALFAA(I,IS)
   41  ALFA(IS)=ALFAA(1,IS)
C------------------------------------------------------------
       IF(N.LE.0.AND.JEALFA.LE.0)GO TO 42
       CALL EFFZ3(JEALFA,N,L,E,QD,JSN,ZZ0,NSHELL,NC,NUMEL,ALFA,
     &JALF1,JALF2,X0,X1,X2,ACC,M)
   42  IF(N)48,48,45
   45  IF(JEALFA)46,46,47
   46  EN=N
       QD=EN-Z1/DSQRT(-E)
       IF(OPEN17)WRITE(17,129)JSN,N,L,QDA(I),QD,E,ALFA(1),X0,X1,X2,M
       IF(NSHELL-1)49,49,52
 52    IF(OPEN17)WRITE(17,144)(ALFA(IS),IS=2,NSHELL)
       GO TO 49
 47    IF(OPEN17)WRITE(17,124)JSN,N,L,QD,E,ALFAA(I,1),ALFA(1),X0,X1,X2,M
       IF(NSHELL-1)49,49,53
 53    IF(OPEN17)WRITE(17,145)(ALFAA(I,IS),ALFA(IS),IS=2,NSHELL)
       GO TO 49
 48    IF(OPEN17)WRITE(17,128)JSN,E,L,QD,ALFAA(I,1),ALFA(1),X0,X1,X2
       IF(NSHELL-1)49,49,54
 54    IF(OPEN17)WRITE(17,146)(ALFAA(I,IS),ALFA(IS),IS=2,NSHELL)
 49    CONTINUE
       QDA(I)=QD
       X0A(I)=X0
       X1A(I)=X1
       X2A(I)=X2
       IF(NSHELL.LE.0)GO TO 50
       DO 43 IS=1,NSHELL
   43  ALFAA(I,IS)=ALFA(IS)
   50  CONTINUE
       XMAX1=DMAX1(X1A(1),X1A(2))
       ZZ1=0.0D0
       ZZ2=0.0D0
       ZZ3=0.0D0
       IF(XMAX.GE.XMAX1)GO TO 73
       WRITE(I4UNIT(-1),111)
C       WRITE(7,111)
  111  FORMAT(1H ,'WARNING XMAX TOO LOW')
   73  JMAX=XMAX/H+0.5D0
       H1=0.33333333D0*H
       ICASE=0
       IF(IREPT-1)74,200,201
  200  IF(NA(1).LE.0.AND.NA(2).LE.0)ICASE=3
       GO TO 69
  201  IF(NA(1).GT.0)GO TO 64
   74  IF(IEXT.LE.0)GO TO 72
       IF(NA(1).LE.0.OR.NA(2).LE.0)STOP
       X=0.0D0
       DO 75 J=1,JMAX
       X=X+H
       GI(J)=GEXT(X,NA(1),LA(1))
   75  GJ(J)=GEXT(X,NA(2),LA(2))
       GO TO 69
   72  IF(NSHELL.LE.0)GO TO 70
       DO 61 IS=1,NSHELL
   61  ALFA(IS)=ALFAA(1,IS)
   70  X0I=X0A(1)
       X1I=X1A(1)
       X2I=X2A(1)
       NI=NA(1)
       LAI=LA(1)
       ELI=LAI
       EI=EA(1)
       QDI=QDA(1)
       CALL ZSER(JSN,ZZ0,NSHELL,NC,NUMEL,ALFA,ZS)
       X=0.0D0
       DO 62 J=1,JMAX
       X=X+H
       ZL(J)=ZEFF(JSN,ZZ0,NSHELL,NC,NUMEL,ALFA,X)
   62  CONTINUE
       IF(NI.LE.0)GO TO 63
       CALL BDCF7(NI,LAI,QDI,JSN,ZZ0,NSHELL,NC,NUMEL,ALFA,ZL,ZZ1,ZZ2,
     &ZZ3,ZS,X0I,X1I,X2I,XMAX,H,GI,CI)
       GO TO 64
   63  ICASE=ICASE+2
       CALL FCF6(GI,CI,A0I,AMPI,PHII,QDI,X0,NI,LAI,EI,JSN,ZZ0,NSHELL,
     &NC,NUMEL,ALFA,ZL,ZZ1,ZZ2,ZZ3,ZS,XMAX,H,X2I,H2)
   64  IF(IREPT-1)210,69,205
  205  IF(NA(2).GT.0)GO TO 69
  210  IF(NSHELL.LE.0)GO TO 71
       DO 65 IS=1,NSHELL
   65  ALFA(IS)=ALFAA(2,IS)
   71  X0J=X0A(2)
       X1J=X1A(2)
       X2J=X2A(2)
       NJ=NA(2)
       LAJ=LA(2)
       ELJ=LAJ
       EJ=EA(2)
       QDJ=QDA(2)
       CALL ZSER(JSN,ZZ0,NSHELL,NC,NUMEL,ALFA,ZS)
       X=0.0D0
       DO 66 J=1,JMAX
       X=X+H
       ZL(J)=ZEFF(JSN,ZZ0,NSHELL,NC,NUMEL,ALFA,X)
   66  CONTINUE
       IF(NJ.LE.0)GO TO 68
       CALL BDCF7(NJ,LAJ,QDJ,JSN,ZZ0,NSHELL,NC,NUMEL,ALFA,ZL,ZZ1,ZZ2,
     &ZZ3,ZS,X0J,X1J,X2J,XMAX,H,GJ,CJ)
       GO TO 69
   68  ICASE=ICASE+1
       CALL FCF6(GJ,CJ,A0J,AMPJ,PHIJ,QDJ,X0,NJ,LAJ,EJ,JSN,ZZ0,NSHELL,
     &NC,NUMEL,ALFA,ZL,ZZ1,ZZ2,ZZ3,ZS,XMAX,H,X2J,H2)
   69  J=0
       X=0.0D0
       TDW=0.0D0
       B3=0.0D0
   83  J=J+2
       X=X+H+H
       B1=B3
       B2=GI(J-1)*GJ(J-1)*(X-H)**LAM
       B3=GI(J)*GJ(J)*X**LAM
C      WRITE(7,110)X,TDW,GI(J),GJ(J),GI(J-1),GJ(J-1)
  110  FORMAT(1H ,1P,6D12.4)
       TDW=TDW+B1+4.0D0*B2+B3
       IF(J-JMAX)83,86,86
   86  TDW=TDW*H1
       IF(ICASE.LT.3)GO TO 99
       TKIJ=DABS(DSQRT(EI)-DSQRT(EJ))
       ZED=-Z1
   90  A10=A0I
       A20=A0J
       PHI1=PHII
       PHI2=PHIJ
       DO 91 J=1,10
       AMP1(J)=AMPI(J)
       AMP2(J)=AMPJ(J)
   91  CONTINUE
C      WRITE(7,110)A10,PHI1,QDI,A20,PHI2,QDJ
       X=XMAX
       REM2=0.0D0
       IF(TKIJ*XMAX-10.0D0)93,92,92
   92  IF(X2I+X2J-XMAX-XMAX-1.0D-40)94,94,93
   93  F0=GI(JMAX-1)
       F1=GI(JMAX)
       G0=GJ(JMAX-1)
       G1=GJ(JMAX)
C      WRITE(7,110)X,TDW,F1,G1,F0,G0
       CALL ASS2(XMAX,H,X,F0,F1,G0,G1,EI,EJ,TKIJ,LAI,LAJ,ZED,LAM,REM2)
       ELLI=ELI*(ELI+1.0D0)
       ELLJ=ELJ*(ELJ+1.0D0)
       CALL DNAMP(A10,AMP1,EI,ELLI,ZED,X,10,5)
       CALL DNAMP(A20,AMP2,EJ,ELLJ,ZED,X,10,5)
       PHI1=PHASE(EI,ELI,ZED,X)
       PHI2=PHASE(EJ,ELJ,ZED,X)
   94  PHI1=PHI1+3.14159265*QDI
       PHI2=PHI2+3.14159265*QDJ
       CALL ASS(A10,AMP1,A20,AMP2,PHI1,PHI2,X,LAM,EI,EJ,10,REM)
       TDW=TDW+REM+REM2
C      WRITE(7,110)PHI1,PHI2,TDW,REM,REM2
   99  CONTINUE
       ANS=TDW
       RETURN
  129  FORMAT('0',1X,'JSN',4X,'N',4X,'L',10X,'QD',14X,'E',8X,'ALFA',7X,
     & 'X0',8X,'X1',8X,'X2',7X,'M'/17X,'ESTIMATE CALCULATED'/
     &3I5,7F10.5,I5)
  128  FORMAT('0',1X,'JSN',5X,'E',8X,'L',5X,'QD',12X,'ALFA',12X,'X0',8X,
     & 'X1',8X,'X2'/32X,'ESTIMATE CALCULATED'/
     &I5,F10.5,I5,6F10.5)
  124  FORMAT('0',1X,'JSN',4X,'N',4X,'L',5X,'QD',8X,'E',13X,'ALFA',12X,
     & 'X0',8X,'X1',8X,'X2',7X,'M'/37X,'ESTIMATE CALCULATED'/
     &3I5,7F10.5,I5)
  144  FORMAT(45X,F10.5)
  145  FORMAT(35X,2F10.5)
  146  FORMAT(30X,2F10.5)
      END
